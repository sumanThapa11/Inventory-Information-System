/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SiliconCenter;


import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Suman Thapa
 */
public class SiliconCenterInfo extends javax.swing.JFrame {

    /**
     * Creates new form SiliconCenterInfo
     */
    public SiliconCenterInfo() {
        initComponents();
        //adding 12 rows of data in the product table 
        String[] data = {"321","Core i9-10900K","Processor","Intel","610","Out of Stock","4","327","E850 Gold","Power Supply","NZXT","269","In Stock","4",
                "333","Evo 980 Pro 1TB","SSD","Samsung","239","In Stock","4","339","GeForce RTX 3080","Graphics Card","Nvidia","699","Out of Stock","5",
                "345","MPG X570","Motherboard","MSI","169","In Stock","5","351","Radeon RX 6800XT","Graphics Card","AMD","649","In Stock","4",
                "357","RM850x Gold","Power Supply","Corsair","149","Out of Stock","5","363","Ryzen 9 5905X","Processor","AMD","799","In Stock","5",
                "369","Vengeance RGB PRO 16GB","RAM","Corsair","99","In Stock","3","375","Viper Steel 16TB","RAM","Patriot","129","In Stock","5",
                "381","WD SN750 1TB","SSD","Digital","199","In Stock","4","387","Z390 Aorus Ultra","Motherboard","Gigabyte","149","Out of Stock","4"};
                
        int dataValue  = 0;
        int totalRows = data.length/7;
        int totalColumn = 7;
        for(int i =0;i<totalRows;i++){
            for(int j=0; j<totalColumn;j++){
                productTable.setValueAt(data[dataValue], i, j);
                dataValue++;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        availability = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        components = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        productNumberLbl = new javax.swing.JLabel();
        productNumberFld = new javax.swing.JTextField();
        nameLbl = new javax.swing.JLabel();
        nameFld = new javax.swing.JTextField();
        categoryLbl = new javax.swing.JLabel();
        companyFld = new javax.swing.JTextField();
        categoryCombobox = new javax.swing.JComboBox<>();
        companyLbl = new javax.swing.JLabel();
        priceLbl = new javax.swing.JLabel();
        priceFld = new javax.swing.JTextField();
        availabilityLbl = new javax.swing.JLabel();
        inStockRadioBtn = new javax.swing.JRadioButton();
        outOfStockRadioBtn = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        ratingSlider = new javax.swing.JSlider();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        productNoValidateLbl = new javax.swing.JLabel();
        nameValidateLbl = new javax.swing.JLabel();
        categoryValidateLbl = new javax.swing.JLabel();
        companyValidateLbl = new javax.swing.JLabel();
        priceValidateLbl = new javax.swing.JLabel();
        availabilityValidateLbl = new javax.swing.JLabel();
        tableContainer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        searchByCategoryComboBox = new javax.swing.JComboBox<>();
        searchByCategoryBtn = new javax.swing.JButton();
        searchByPriceFld = new javax.swing.JTextField();
        searchByPriceBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        sortByPriceBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openFile = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exit = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        fileChooser.setDialogTitle("Choose file");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(600, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        components.setBackground(new java.awt.Color(246, 134, 134));
        components.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        components.setMaximumSize(new java.awt.Dimension(600, 250));
        components.setPreferredSize(new java.awt.Dimension(600, 200));
        components.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(236, 236, 236));

        closeBtn.setBackground(new java.awt.Color(251, 2, 2));
        closeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        closeBtn.setForeground(new java.awt.Color(255, 255, 255));
        closeBtn.setText("X");
        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Bernard MT Condensed", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(20, 159, 152));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Silicon Center Information System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(205, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(88, 88, 88)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        components.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 40));

        productNumberLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        productNumberLbl.setText("Product number");
        components.add(productNumberLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 66, -1, -1));

        productNumberFld.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        productNumberFld.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        productNumberFld.setPreferredSize(new java.awt.Dimension(100, 25));
        productNumberFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productNumberFldKeyPressed(evt);
            }
        });
        components.add(productNumberFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 58, 135, 35));

        nameLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLbl.setText("Name");
        components.add(nameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 44, -1));

        nameFld.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nameFld.setPreferredSize(new java.awt.Dimension(100, 25));
        components.add(nameFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 137, 35));

        categoryLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        categoryLbl.setText("Category");
        components.add(categoryLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        companyFld.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        companyFld.setPreferredSize(new java.awt.Dimension(100, 25));
        components.add(companyFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 137, 35));

        categoryCombobox.setBackground(new java.awt.Color(246, 134, 134));
        categoryCombobox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        categoryCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Categories--", "Processor", "Graphics Card", "SSD", "Motherboard", "RAM", "Power Supply" }));
        categoryCombobox.setPreferredSize(new java.awt.Dimension(100, 25));
        components.add(categoryCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 116, 137, 30));

        companyLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        companyLbl.setText("Company");
        components.add(companyLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 67, -1));

        priceLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        priceLbl.setText("Price");
        components.add(priceLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 173, -1, -1));

        priceFld.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        priceFld.setPreferredSize(new java.awt.Dimension(100, 25));
        priceFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceFldKeyPressed(evt);
            }
        });
        components.add(priceFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 165, 137, 35));

        availabilityLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        availabilityLbl.setText("Availability");
        components.add(availabilityLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, -1, -1));

        inStockRadioBtn.setBackground(new java.awt.Color(246, 134, 134));
        availability.add(inStockRadioBtn);
        inStockRadioBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inStockRadioBtn.setText("In stock");
        components.add(inStockRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 75, -1));

        outOfStockRadioBtn.setBackground(new java.awt.Color(246, 134, 134));
        availability.add(outOfStockRadioBtn);
        outOfStockRadioBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        outOfStockRadioBtn.setText("Out of stock");
        components.add(outOfStockRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, 93, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Rating");
        components.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 218, -1, -1));

        ratingSlider.setBackground(new java.awt.Color(246, 134, 134));
        ratingSlider.setForeground(new java.awt.Color(0, 0, 0));
        ratingSlider.setMajorTickSpacing(1);
        ratingSlider.setMaximum(5);
        ratingSlider.setPaintLabels(true);
        ratingSlider.setValue(0);
        components.add(ratingSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 218, 137, 35));

        addBtn.setBackground(new java.awt.Color(0, 0, 0));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(236, 236, 236));
        addBtn.setText("Add");
        addBtn.setToolTipText("");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        components.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 92, 33));

        clearBtn.setBackground(new java.awt.Color(0, 0, 0));
        clearBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(236, 236, 236));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        components.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 220, 92, 33));

        productNoValidateLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        productNoValidateLbl.setForeground(new java.awt.Color(3, 50, 128));
        components.add(productNoValidateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 100, 15));

        nameValidateLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nameValidateLbl.setForeground(new java.awt.Color(3, 50, 128));
        components.add(nameValidateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 100, 15));

        categoryValidateLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        categoryValidateLbl.setForeground(new java.awt.Color(3, 50, 128));
        components.add(categoryValidateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 100, 15));

        companyValidateLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        companyValidateLbl.setForeground(new java.awt.Color(3, 50, 128));
        components.add(companyValidateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 100, 15));

        priceValidateLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        priceValidateLbl.setForeground(new java.awt.Color(3, 50, 128));
        components.add(priceValidateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 100, 15));

        availabilityValidateLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        availabilityValidateLbl.setForeground(new java.awt.Color(3, 50, 128));
        components.add(availabilityValidateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 100, 15));

        getContentPane().add(components, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 280));

        tableContainer.setBackground(new java.awt.Color(20, 159, 152));

        jPanel2.setBackground(new java.awt.Color(236, 236, 236));

        jLabel3.setFont(new java.awt.Font("Bernard MT Condensed", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(20, 159, 152));
        jLabel3.setText("Product details");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(224, 224, 224))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchByCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Categories--", "Processor", "Graphics Card", "SSD", "Motherboard", "RAM", "Power Supply" }));

        searchByCategoryBtn.setBackground(new java.awt.Color(0, 0, 0));
        searchByCategoryBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchByCategoryBtn.setForeground(new java.awt.Color(236, 236, 236));
        searchByCategoryBtn.setText("Search by category");
        searchByCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByCategoryBtnActionPerformed(evt);
            }
        });

        searchByPriceFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchByPriceFldKeyPressed(evt);
            }
        });

        searchByPriceBtn.setBackground(new java.awt.Color(0, 0, 0));
        searchByPriceBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchByPriceBtn.setForeground(new java.awt.Color(236, 236, 236));
        searchByPriceBtn.setText("Search by price");
        searchByPriceBtn.setToolTipText("");
        searchByPriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByPriceBtnActionPerformed(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Product no", "Name", "Category", "Company", "Price($)", "Availability", "Rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.setRowHeight(20);
        productTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            productTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            productTable.getColumnModel().getColumn(2).setResizable(false);
            productTable.getColumnModel().getColumn(2).setPreferredWidth(70);
            productTable.getColumnModel().getColumn(3).setResizable(false);
            productTable.getColumnModel().getColumn(3).setPreferredWidth(60);
            productTable.getColumnModel().getColumn(4).setResizable(false);
            productTable.getColumnModel().getColumn(4).setPreferredWidth(40);
            productTable.getColumnModel().getColumn(5).setResizable(false);
            productTable.getColumnModel().getColumn(5).setPreferredWidth(70);
            productTable.getColumnModel().getColumn(6).setResizable(false);
            productTable.getColumnModel().getColumn(6).setPreferredWidth(22);
        }

        sortByPriceBtn.setBackground(new java.awt.Color(0, 0, 0));
        sortByPriceBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sortByPriceBtn.setForeground(new java.awt.Color(236, 236, 236));
        sortByPriceBtn.setText("Sort by price");
        sortByPriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByPriceBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(0, 0, 0));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(236, 236, 236));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tableContainerLayout = new javax.swing.GroupLayout(tableContainer);
        tableContainer.setLayout(tableContainerLayout);
        tableContainerLayout.setHorizontalGroup(
            tableContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(tableContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tableContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                    .addGroup(tableContainerLayout.createSequentialGroup()
                        .addComponent(searchByPriceFld, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(searchByPriceBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchByCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchByCategoryBtn)))
                .addContainerGap())
            .addGroup(tableContainerLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(sortByPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tableContainerLayout.setVerticalGroup(
            tableContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableContainerLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tableContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchByCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByCategoryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByPriceFld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tableContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sortByPriceBtn)
                    .addComponent(deleteBtn))
                .addContainerGap())
        );

        getContentPane().add(tableContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 640, 290));

        jMenuBar1.setBackground(new java.awt.Color(236, 236, 236));

        fileMenu.setText("File");

        openFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openFile.setText("Open file");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });
        fileMenu.add(openFile);
        fileMenu.add(jSeparator1);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        fileMenu.add(exit);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");
        helpMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(640, 594));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * This method is used to exit from the system.
     * @param evt 
     */
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        int yes_no = JOptionPane.showConfirmDialog(this, "Do you wish to exit the system?","Exit system", JOptionPane.YES_NO_OPTION);
        
        if (yes_no==JOptionPane.YES_OPTION){
            close();
        } 
    }//GEN-LAST:event_exitActionPerformed
    
    /**
     * This method is used to exit from the system when close button is clicked. 
     * @param evt 
     */
    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        int yes_no = JOptionPane.showConfirmDialog(this, "Do you wish to exit the system?","Exit system", JOptionPane.YES_NO_OPTION);
        
        if (yes_no==JOptionPane.YES_OPTION){
            close();
        } 
    }//GEN-LAST:event_closeBtnMouseClicked
    
    /**
     * This method is used to search the product details by price.
     * @param evt 
     */
    private void searchByPriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByPriceBtnActionPerformed
        //getting the input price from the user.
        String searchValue = searchByPriceFld.getText().trim();
        if(searchValue.isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty field. Please enter a price.");
        } else {
            String a[]= valuesOfTable();    //storing the values of product table in an array
            Sort.sort(a);
        
            Search.binarySearchPrice(a, searchValue);
            searchByPriceFld.setText("");
        }
       
    }//GEN-LAST:event_searchByPriceBtnActionPerformed
  
    /**
     * This method is used to add product details in the table.
     * @param evt 
     */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        
        String productNumber = productNumberFld.getText().trim();
        String name = nameFld.getText().trim();
        String company = companyFld.getText().trim();
        String price = priceFld.getText().trim();

        String category = (String) categoryCombobox.getSelectedItem();
        
        String productAvailability="";
        if(inStockRadioBtn.isSelected()){
            productAvailability = inStockRadioBtn.getText();
        } else if(outOfStockRadioBtn.isSelected()){
            productAvailability = outOfStockRadioBtn.getText(); 
        }
     
        String rating = Integer.toString(ratingSlider.getValue());
        
        int nextRow = 0; //for pointing rows
        boolean empty = false; //data can be added only on empty row
        String s;
        int colCount = productTable.getColumnCount();
        
        if(!productNumber.isEmpty()){
            if(!name.isEmpty()){
                    if(categoryCombobox.getSelectedIndex() !=0){
                        if(!company.isEmpty()){
                        if(!price.isEmpty()){
                            if(!productAvailability.isEmpty()){
                                String data[] = {productNumber, name, category, company, price, productAvailability, rating};
                                
                                do{
                                    s = (String) productTable.getValueAt(nextRow, 0);
                                    if(s !=null && s.length() !=0){
                                        if(s.equals(productNumber)){
                                            JOptionPane.showMessageDialog(null, "The item already exists.");
                                            break;
                                        }
                                        nextRow++;
                                    } else {
                                        empty = true;
                                    }
                                } while (!empty);       //searching for an empty row
                                //adding values in the table
                                for(int i=0; i<colCount; i++){
                                    productTable.setValueAt(data[i], nextRow, i);
                                }
                                clearFields();
                            } else {
                                validateField(availabilityValidateLbl);
                            }
                        } else {
                            validateField(priceValidateLbl);
                            priceFld.grabFocus();
                        }
                    } else{
                        validateField(companyValidateLbl);
                        companyFld.grabFocus();
                    }
                } else {
                    validateField(categoryValidateLbl);
                }
            } else {
                validateField(nameValidateLbl);
                nameFld.grabFocus();
            }
        } else {
            validateField(productNoValidateLbl);
            productNumberFld.grabFocus();
        }
    }//GEN-LAST:event_addBtnActionPerformed
    
    /**
     * This method is used to clear all the components of the GUI.
     * @param evt 
     */
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearFields();
    }//GEN-LAST:event_clearBtnActionPerformed
    
    /**
     * This method is used for accepting only numerical values in price field.
     * @param evt 
     */
    private void priceFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceFldKeyPressed
        char c = evt.getKeyChar();
        if(Character.isDigit(c) ||evt.getKeyCode()==8){
            priceFld.setEditable(true);
        }else{
           priceFld.setEditable(false);
        } 
    }//GEN-LAST:event_priceFldKeyPressed
    
    /**
     * This method is used for accepting only numerical values is product number field.
     * @param evt 
     */
    private void productNumberFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNumberFldKeyPressed
        char c = evt.getKeyChar();
        if(Character.isDigit(c) ||evt.getKeyCode()==8){
            productNumberFld.setEditable(true);
        }else{
           productNumberFld.setEditable(false);
        } 
    }//GEN-LAST:event_productNumberFldKeyPressed
    
    /**
     * This method is used for accepting only numerical values in search by price field.
     * @param evt 
     */
    private void searchByPriceFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchByPriceFldKeyPressed
        char c = evt.getKeyChar();
        if(Character.isDigit(c) ||evt.getKeyCode()==8){
            searchByPriceFld.setEditable(true);
        }else{
           searchByPriceFld.setEditable(false);
        } 
    }//GEN-LAST:event_searchByPriceFldKeyPressed
    
    /**
     * This method is used to find number of products in a category.
     * @param evt 
     */
    private void searchByCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByCategoryBtnActionPerformed
        int index = searchByCategoryComboBox.getSelectedIndex();
        if(index!=0){
            String searchValue = (String) searchByCategoryComboBox.getSelectedItem();
            String a [] = valuesOfTable();
            
            //searching the products available in the selected category
            Search.searchCategory(a, searchValue);}
        else{
            JOptionPane.showMessageDialog(null, "Category not selected. Please select a category.");
        }
    }//GEN-LAST:event_searchByCategoryBtnActionPerformed
    
    /**
     * This method is used to sort the table rows according to the price in ascending order.
     * @param evt 
     */
    private void sortByPriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByPriceBtnActionPerformed
        if(productTable.getValueAt(0,0)!= null){
            int totalRows = 0;  //to count the total rows
            Boolean emptyRow = false;
            String a;
            do{
                a = (String) productTable.getValueAt(totalRows,0);
                if(a!=null && a.length()!=0){
                    totalRows++;
                }else{
                    emptyRow = true;
                }
            }while(!emptyRow);    
            
            String data[] = valuesOfTable();    //getting the data from table
            Sort.sort(data);
        
            int arrayValue  = 0;    //for pointing the value in the array
            int colCount = productTable.getColumnCount();
            
            //adding the sorted data in the table
            for(int i = 0; i<totalRows;i++){
                for(int j = 0; j<colCount; j++){
                    productTable.setValueAt(data[arrayValue], i, j);
                    arrayValue++;
                }
            }
                
            } else {
                JOptionPane.showMessageDialog(null, "There are no data in the table. Please insert data first.");
                }
        
    }//GEN-LAST:event_sortByPriceBtnActionPerformed
    
    /**
     * This method is used to delete a selected row from product table.
     * @param evt 
     */
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) productTable.getModel();
        //checking if the table is empty
        if(productTable.getValueAt(0,0)==null){
            JOptionPane.showMessageDialog(null,"The table is empty. Please insert some data first.");
        } else{
            //delete row
            if(productTable.getSelectedRowCount()==1){
                tblModel.removeRow(productTable.getSelectedRow()); //delete row if single row is selected
            } else{
                JOptionPane.showMessageDialog(null, "Please select a single row for deletion."); //show alert message if multiple or no row is selected
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed
    
    /**
     * This method is used to open a help file when help menu option is clicked.
     * @param evt 
     */
    private void helpMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpMenuMouseClicked
        JOptionPane.showMessageDialog(null,"Please select help.pdf file from SiliconCenter_IS");
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                Desktop.getDesktop().open(file);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Invalid file. Please select appropriate file."); 
            }
        }
    }//GEN-LAST:event_helpMenuMouseClicked
    
    
    boolean fileOpened  = false;
    /**
     * This method is used to import an existing csv file in the product table.
     * @param evt 
     */
    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        
        if(fileOpened==false){
            JOptionPane.showMessageDialog(null,"Please select siliconCenterProductDetails.csv file from SiliconCenter_IS");
            int returnVal = fileChooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                try {
                    BufferedReader bufferreader=new BufferedReader(new FileReader(file));
                    String line;
                    Boolean empty = false;
                    String s;
                    int nextRow=0;
                    do{
                        s = (String) productTable.getValueAt(nextRow, 0);   //searching for an empty row
                        if(s!=null && s.length() !=0){
                            nextRow++;
                        } else {
                            empty = true;
                        }
                    } while(!empty);
                while((line=bufferreader.readLine())!=null){
                    String[] data=line.split(",");
              
                    int dataValue  = 0;
                    int totalColumn = productTable.getColumnCount();
                    for(int i =nextRow;i<nextRow+12;i++){
                        for(int j=0; j<totalColumn;j++){       
                            productTable.setValueAt(data[dataValue], i, j);     //adding values into table
                            dataValue++;
                        }
                    }
                }
                fileOpened = true;
          
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,"Invalid file. Please select appropriate file.");                }
            } 
        } else {
            JOptionPane.showMessageDialog(null,"File is already imported."); //showing an alert message if the file is opened more than once
        }
    }//GEN-LAST:event_openFileActionPerformed
    
    /**
     * This method sets all the labels empty except for the passed label.
     * @param label 
     */
    public void validateField(JLabel label){
        productNoValidateLbl.setText("");
        nameValidateLbl.setText("");
        categoryValidateLbl.setText("");
        companyValidateLbl.setText("");
        priceValidateLbl.setText("");
        availabilityValidateLbl.setText("");
        
        label.setText("*required info");
    }
    /**
     * This method clears all the data of the GUI.
     */
    public void clearFields(){
        productNumberFld.setText("");
        nameFld.setText("");
        categoryCombobox.setSelectedIndex(0);
        companyFld.setText("");
        priceFld.setText("");
        availability.clearSelection();
        ratingSlider.setValue(0);
        
        searchByPriceFld.setText("");
        searchByCategoryComboBox.setSelectedIndex(0);
        
        productNoValidateLbl.setText("");
        nameValidateLbl.setText("");
        categoryValidateLbl.setText("");
        companyValidateLbl.setText("");
        priceValidateLbl.setText("");
        availabilityValidateLbl.setText("");
    }
   
    /**
     * This method is used to get values of table.
     * @return data 
     */
    public String[] valuesOfTable(){
        
        int totalRows = 0;  //to count the rows with values
        Boolean emptyRow = false;
        String a;
        do{
            a = (String) productTable.getValueAt(totalRows,0);
            if(a!=null && a.length()!=0){
                totalRows++;
            }else{
                emptyRow = true;
            }
        }while(!emptyRow);
        
        String data[] = new String[7*totalRows];
        int arrayValue = 0;
        int colCount = productTable.getColumnCount();
        
        //storing the data from product table in data[] array.
        for(int i=0; i<totalRows; i++){
            for(int j=0; j<colCount; j++){
                data[arrayValue] = (String) productTable.getValueAt(i,j);
                    arrayValue++;
                }
            }
        return data;
    }
    
    
    /**
     * This method is used to close the GUI.
     */
    public void close(){
        WindowEvent winCloseEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winCloseEvent);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SiliconCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SiliconCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SiliconCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SiliconCenterInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SiliconCenterInfo().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.ButtonGroup availability;
    private javax.swing.JLabel availabilityLbl;
    private javax.swing.JLabel availabilityValidateLbl;
    private javax.swing.JComboBox<String> categoryCombobox;
    private javax.swing.JLabel categoryLbl;
    private javax.swing.JLabel categoryValidateLbl;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTextField companyFld;
    private javax.swing.JLabel companyLbl;
    private javax.swing.JLabel companyValidateLbl;
    private javax.swing.JPanel components;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JMenuItem exit;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JRadioButton inStockRadioBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField nameFld;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JLabel nameValidateLbl;
    private javax.swing.JMenuItem openFile;
    private javax.swing.JRadioButton outOfStockRadioBtn;
    private javax.swing.JTextField priceFld;
    private javax.swing.JLabel priceLbl;
    private javax.swing.JLabel priceValidateLbl;
    private javax.swing.JLabel productNoValidateLbl;
    private javax.swing.JTextField productNumberFld;
    private javax.swing.JLabel productNumberLbl;
    private javax.swing.JTable productTable;
    private javax.swing.JSlider ratingSlider;
    private javax.swing.JButton searchByCategoryBtn;
    private javax.swing.JComboBox<String> searchByCategoryComboBox;
    private javax.swing.JButton searchByPriceBtn;
    private javax.swing.JTextField searchByPriceFld;
    private javax.swing.JButton sortByPriceBtn;
    private javax.swing.JPanel tableContainer;
    // End of variables declaration//GEN-END:variables
}
